// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: fileshare.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_OK    Status = 0
	Status_ERROR Status = 1
	Status_RETRY Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "OK",
		1: "ERROR",
		2: "RETRY",
	}
	Status_value = map[string]int32{
		"OK":    0,
		"ERROR": 1,
		"RETRY": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_fileshare_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_fileshare_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{0}
}

type FileMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Sha256        string                 `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	FileSize      int64                  `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMeta) Reset() {
	*x = FileMeta{}
	mi := &file_fileshare_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMeta) ProtoMessage() {}

func (x *FileMeta) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMeta.ProtoReflect.Descriptor instead.
func (*FileMeta) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{0}
}

func (x *FileMeta) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileMeta) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *FileMeta) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sha256        string                 `protobuf:"bytes,1,opt,name=sha256,proto3" json:"sha256,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,2,opt,name=chunkIndex,proto3" json:"chunkIndex,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_fileshare_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{1}
}

func (x *FileChunk) GetSha256() string {
	if x != nil {
		return x.Sha256
	}
	return ""
}

func (x *FileChunk) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *FileMeta              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	FileSize      int64                  `protobuf:"varint,2,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_fileshare_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{2}
}

func (x *UploadRequest) GetMeta() *FileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UploadRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type UploadTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *FileMeta              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	ChunkNumber   int32                  `protobuf:"varint,2,opt,name=chunkNumber,proto3" json:"chunkNumber,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,3,opt,name=chunkSize,proto3" json:"chunkSize,omitempty"`
	ChunkList     []int32                `protobuf:"varint,4,rep,packed,name=chunkList,proto3" json:"chunkList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadTask) Reset() {
	*x = UploadTask{}
	mi := &file_fileshare_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadTask) ProtoMessage() {}

func (x *UploadTask) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadTask.ProtoReflect.Descriptor instead.
func (*UploadTask) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{3}
}

func (x *UploadTask) GetMeta() *FileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UploadTask) GetChunkNumber() int32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *UploadTask) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *UploadTask) GetChunkList() []int32 {
	if x != nil {
		return x.ChunkList
	}
	return nil
}

type UploadStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *FileMeta              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Status        Status                 `protobuf:"varint,2,opt,name=status,proto3,enum=fileshare.Status" json:"status,omitempty"`
	ChunkList     []int32                `protobuf:"varint,3,rep,packed,name=chunkList,proto3" json:"chunkList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadStatus) Reset() {
	*x = UploadStatus{}
	mi := &file_fileshare_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadStatus) ProtoMessage() {}

func (x *UploadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadStatus.ProtoReflect.Descriptor instead.
func (*UploadStatus) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{4}
}

func (x *UploadStatus) GetMeta() *FileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UploadStatus) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *UploadStatus) GetChunkList() []int32 {
	if x != nil {
		return x.ChunkList
	}
	return nil
}

type DownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *FileMeta              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	mi := &file_fileshare_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadRequest) GetMeta() *FileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type DownloadSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=fileshare.Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Meta          *FileMeta              `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
	FileSize      int64                  `protobuf:"varint,4,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	ChunkNumber   int32                  `protobuf:"varint,5,opt,name=chunkNumber,proto3" json:"chunkNumber,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,6,opt,name=chunkSize,proto3" json:"chunkSize,omitempty"`
	ChunkList     []int32                `protobuf:"varint,7,rep,packed,name=chunkList,proto3" json:"chunkList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadSummary) Reset() {
	*x = DownloadSummary{}
	mi := &file_fileshare_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSummary) ProtoMessage() {}

func (x *DownloadSummary) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadSummary.ProtoReflect.Descriptor instead.
func (*DownloadSummary) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadSummary) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *DownloadSummary) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DownloadSummary) GetMeta() *FileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DownloadSummary) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *DownloadSummary) GetChunkNumber() int32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *DownloadSummary) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *DownloadSummary) GetChunkList() []int32 {
	if x != nil {
		return x.ChunkList
	}
	return nil
}

type DownloadTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *FileMeta              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	ChunkNumber   int32                  `protobuf:"varint,2,opt,name=chunkNumber,proto3" json:"chunkNumber,omitempty"`
	ChunkList     []int32                `protobuf:"varint,3,rep,packed,name=chunkList,proto3" json:"chunkList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadTask) Reset() {
	*x = DownloadTask{}
	mi := &file_fileshare_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTask) ProtoMessage() {}

func (x *DownloadTask) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTask.ProtoReflect.Descriptor instead.
func (*DownloadTask) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{7}
}

func (x *DownloadTask) GetMeta() *FileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *DownloadTask) GetChunkNumber() int32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *DownloadTask) GetChunkList() []int32 {
	if x != nil {
		return x.ChunkList
	}
	return nil
}

type ShareLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *FileMeta              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	ValidDays     int32                  `protobuf:"varint,2,opt,name=validDays,proto3" json:"validDays,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareLinkRequest) Reset() {
	*x = ShareLinkRequest{}
	mi := &file_fileshare_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareLinkRequest) ProtoMessage() {}

func (x *ShareLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareLinkRequest.ProtoReflect.Descriptor instead.
func (*ShareLinkRequest) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{8}
}

func (x *ShareLinkRequest) GetMeta() *FileMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ShareLinkRequest) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

type ShareLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=fileshare.Status" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	LinkCode      string                 `protobuf:"bytes,3,opt,name=linkCode,proto3" json:"linkCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareLinkResponse) Reset() {
	*x = ShareLinkResponse{}
	mi := &file_fileshare_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareLinkResponse) ProtoMessage() {}

func (x *ShareLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareLinkResponse.ProtoReflect.Descriptor instead.
func (*ShareLinkResponse) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{9}
}

func (x *ShareLinkResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_OK
}

func (x *ShareLinkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ShareLinkResponse) GetLinkCode() string {
	if x != nil {
		return x.LinkCode
	}
	return ""
}

type ShareLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LinkCode      string                 `protobuf:"bytes,1,opt,name=linkCode,proto3" json:"linkCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShareLink) Reset() {
	*x = ShareLink{}
	mi := &file_fileshare_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShareLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareLink) ProtoMessage() {}

func (x *ShareLink) ProtoReflect() protoreflect.Message {
	mi := &file_fileshare_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareLink.ProtoReflect.Descriptor instead.
func (*ShareLink) Descriptor() ([]byte, []int) {
	return file_fileshare_proto_rawDescGZIP(), []int{10}
}

func (x *ShareLink) GetLinkCode() string {
	if x != nil {
		return x.LinkCode
	}
	return ""
}

var File_fileshare_proto protoreflect.FileDescriptor

const file_fileshare_proto_rawDesc = "" +
	"\n" +
	"\x0ffileshare.proto\x12\tfileshare\"Z\n" +
	"\bFileMeta\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x16\n" +
	"\x06sha256\x18\x02 \x01(\tR\x06sha256\x12\x1a\n" +
	"\bfileSize\x18\x03 \x01(\x03R\bfileSize\"W\n" +
	"\tFileChunk\x12\x16\n" +
	"\x06sha256\x18\x01 \x01(\tR\x06sha256\x12\x1e\n" +
	"\n" +
	"chunkIndex\x18\x02 \x01(\x05R\n" +
	"chunkIndex\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"T\n" +
	"\rUploadRequest\x12'\n" +
	"\x04meta\x18\x01 \x01(\v2\x13.fileshare.FileMetaR\x04meta\x12\x1a\n" +
	"\bfileSize\x18\x02 \x01(\x03R\bfileSize\"\x93\x01\n" +
	"\n" +
	"UploadTask\x12'\n" +
	"\x04meta\x18\x01 \x01(\v2\x13.fileshare.FileMetaR\x04meta\x12 \n" +
	"\vchunkNumber\x18\x02 \x01(\x05R\vchunkNumber\x12\x1c\n" +
	"\tchunkSize\x18\x03 \x01(\x03R\tchunkSize\x12\x1c\n" +
	"\tchunkList\x18\x04 \x03(\x05R\tchunkList\"\x80\x01\n" +
	"\fUploadStatus\x12'\n" +
	"\x04meta\x18\x01 \x01(\v2\x13.fileshare.FileMetaR\x04meta\x12)\n" +
	"\x06status\x18\x02 \x01(\x0e2\x11.fileshare.StatusR\x06status\x12\x1c\n" +
	"\tchunkList\x18\x03 \x03(\x05R\tchunkList\":\n" +
	"\x0fDownloadRequest\x12'\n" +
	"\x04meta\x18\x01 \x01(\v2\x13.fileshare.FileMetaR\x04meta\"\xf9\x01\n" +
	"\x0fDownloadSummary\x12)\n" +
	"\x06status\x18\x01 \x01(\x0e2\x11.fileshare.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x04meta\x18\x03 \x01(\v2\x13.fileshare.FileMetaR\x04meta\x12\x1a\n" +
	"\bfileSize\x18\x04 \x01(\x03R\bfileSize\x12 \n" +
	"\vchunkNumber\x18\x05 \x01(\x05R\vchunkNumber\x12\x1c\n" +
	"\tchunkSize\x18\x06 \x01(\x03R\tchunkSize\x12\x1c\n" +
	"\tchunkList\x18\a \x03(\x05R\tchunkList\"w\n" +
	"\fDownloadTask\x12'\n" +
	"\x04meta\x18\x01 \x01(\v2\x13.fileshare.FileMetaR\x04meta\x12 \n" +
	"\vchunkNumber\x18\x02 \x01(\x05R\vchunkNumber\x12\x1c\n" +
	"\tchunkList\x18\x03 \x03(\x05R\tchunkList\"Y\n" +
	"\x10ShareLinkRequest\x12'\n" +
	"\x04meta\x18\x01 \x01(\v2\x13.fileshare.FileMetaR\x04meta\x12\x1c\n" +
	"\tvalidDays\x18\x02 \x01(\x05R\tvalidDays\"t\n" +
	"\x11ShareLinkResponse\x12)\n" +
	"\x06status\x18\x01 \x01(\x0e2\x11.fileshare.StatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1a\n" +
	"\blinkCode\x18\x03 \x01(\tR\blinkCode\"'\n" +
	"\tShareLink\x12\x1a\n" +
	"\blinkCode\x18\x01 \x01(\tR\blinkCode*&\n" +
	"\x06Status\x12\x06\n" +
	"\x02OK\x10\x00\x12\t\n" +
	"\x05ERROR\x10\x01\x12\t\n" +
	"\x05RETRY\x10\x022\x88\x01\n" +
	"\rUploadService\x12<\n" +
	"\tPreUpload\x12\x18.fileshare.UploadRequest\x1a\x15.fileshare.UploadTask\x129\n" +
	"\x06Upload\x12\x14.fileshare.FileChunk\x1a\x17.fileshare.UploadStatus(\x012\xde\x01\n" +
	"\x0fDownloadService\x12G\n" +
	"\x13PreDownloadWithCode\x12\x14.fileshare.ShareLink\x1a\x1a.fileshare.DownloadSummary\x12E\n" +
	"\vPreDownload\x12\x1a.fileshare.DownloadRequest\x1a\x1a.fileshare.DownloadSummary\x12;\n" +
	"\bDownload\x12\x17.fileshare.DownloadTask\x1a\x14.fileshare.FileChunk0\x012]\n" +
	"\x10ShareLinkService\x12I\n" +
	"\fGenerateLink\x12\x1b.fileshare.ShareLinkRequest\x1a\x1c.fileshare.ShareLinkResponseB6Z4github.com/chanmaoganda/fileshare/internal/proto/genb\x06proto3"

var (
	file_fileshare_proto_rawDescOnce sync.Once
	file_fileshare_proto_rawDescData []byte
)

func file_fileshare_proto_rawDescGZIP() []byte {
	file_fileshare_proto_rawDescOnce.Do(func() {
		file_fileshare_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fileshare_proto_rawDesc), len(file_fileshare_proto_rawDesc)))
	})
	return file_fileshare_proto_rawDescData
}

var file_fileshare_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fileshare_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_fileshare_proto_goTypes = []any{
	(Status)(0),               // 0: fileshare.Status
	(*FileMeta)(nil),          // 1: fileshare.FileMeta
	(*FileChunk)(nil),         // 2: fileshare.FileChunk
	(*UploadRequest)(nil),     // 3: fileshare.UploadRequest
	(*UploadTask)(nil),        // 4: fileshare.UploadTask
	(*UploadStatus)(nil),      // 5: fileshare.UploadStatus
	(*DownloadRequest)(nil),   // 6: fileshare.DownloadRequest
	(*DownloadSummary)(nil),   // 7: fileshare.DownloadSummary
	(*DownloadTask)(nil),      // 8: fileshare.DownloadTask
	(*ShareLinkRequest)(nil),  // 9: fileshare.ShareLinkRequest
	(*ShareLinkResponse)(nil), // 10: fileshare.ShareLinkResponse
	(*ShareLink)(nil),         // 11: fileshare.ShareLink
}
var file_fileshare_proto_depIdxs = []int32{
	1,  // 0: fileshare.UploadRequest.meta:type_name -> fileshare.FileMeta
	1,  // 1: fileshare.UploadTask.meta:type_name -> fileshare.FileMeta
	1,  // 2: fileshare.UploadStatus.meta:type_name -> fileshare.FileMeta
	0,  // 3: fileshare.UploadStatus.status:type_name -> fileshare.Status
	1,  // 4: fileshare.DownloadRequest.meta:type_name -> fileshare.FileMeta
	0,  // 5: fileshare.DownloadSummary.status:type_name -> fileshare.Status
	1,  // 6: fileshare.DownloadSummary.meta:type_name -> fileshare.FileMeta
	1,  // 7: fileshare.DownloadTask.meta:type_name -> fileshare.FileMeta
	1,  // 8: fileshare.ShareLinkRequest.meta:type_name -> fileshare.FileMeta
	0,  // 9: fileshare.ShareLinkResponse.status:type_name -> fileshare.Status
	3,  // 10: fileshare.UploadService.PreUpload:input_type -> fileshare.UploadRequest
	2,  // 11: fileshare.UploadService.Upload:input_type -> fileshare.FileChunk
	11, // 12: fileshare.DownloadService.PreDownloadWithCode:input_type -> fileshare.ShareLink
	6,  // 13: fileshare.DownloadService.PreDownload:input_type -> fileshare.DownloadRequest
	8,  // 14: fileshare.DownloadService.Download:input_type -> fileshare.DownloadTask
	9,  // 15: fileshare.ShareLinkService.GenerateLink:input_type -> fileshare.ShareLinkRequest
	4,  // 16: fileshare.UploadService.PreUpload:output_type -> fileshare.UploadTask
	5,  // 17: fileshare.UploadService.Upload:output_type -> fileshare.UploadStatus
	7,  // 18: fileshare.DownloadService.PreDownloadWithCode:output_type -> fileshare.DownloadSummary
	7,  // 19: fileshare.DownloadService.PreDownload:output_type -> fileshare.DownloadSummary
	2,  // 20: fileshare.DownloadService.Download:output_type -> fileshare.FileChunk
	10, // 21: fileshare.ShareLinkService.GenerateLink:output_type -> fileshare.ShareLinkResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_fileshare_proto_init() }
func file_fileshare_proto_init() {
	if File_fileshare_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fileshare_proto_rawDesc), len(file_fileshare_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_fileshare_proto_goTypes,
		DependencyIndexes: file_fileshare_proto_depIdxs,
		EnumInfos:         file_fileshare_proto_enumTypes,
		MessageInfos:      file_fileshare_proto_msgTypes,
	}.Build()
	File_fileshare_proto = out.File
	file_fileshare_proto_goTypes = nil
	file_fileshare_proto_depIdxs = nil
}
