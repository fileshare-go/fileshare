// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: download.proto

package download

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownloadTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadTask) Reset() {
	*x = DownloadTask{}
	mi := &file_download_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTask) ProtoMessage() {}

func (x *DownloadTask) ProtoReflect() protoreflect.Message {
	mi := &file_download_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTask.ProtoReflect.Descriptor instead.
func (*DownloadTask) Descriptor() ([]byte, []int) {
	return file_download_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadTask) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type DownloadSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ChunkNumber   int32                  `protobuf:"varint,2,opt,name=chunkNumber,proto3" json:"chunkNumber,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,3,opt,name=chunkSize,proto3" json:"chunkSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadSummary) Reset() {
	*x = DownloadSummary{}
	mi := &file_download_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadSummary) ProtoMessage() {}

func (x *DownloadSummary) ProtoReflect() protoreflect.Message {
	mi := &file_download_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadSummary.ProtoReflect.Descriptor instead.
func (*DownloadSummary) Descriptor() ([]byte, []int) {
	return file_download_proto_rawDescGZIP(), []int{1}
}

func (x *DownloadSummary) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DownloadSummary) GetChunkNumber() int32 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

func (x *DownloadSummary) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type FileChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChunk) Reset() {
	*x = FileChunk{}
	mi := &file_download_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChunk) ProtoMessage() {}

func (x *FileChunk) ProtoReflect() protoreflect.Message {
	mi := &file_download_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChunk.ProtoReflect.Descriptor instead.
func (*FileChunk) Descriptor() ([]byte, []int) {
	return file_download_proto_rawDescGZIP(), []int{2}
}

func (x *FileChunk) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DownloadStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Status        int32                  `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadStatus) Reset() {
	*x = DownloadStatus{}
	mi := &file_download_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadStatus) ProtoMessage() {}

func (x *DownloadStatus) ProtoReflect() protoreflect.Message {
	mi := &file_download_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadStatus.ProtoReflect.Descriptor instead.
func (*DownloadStatus) Descriptor() ([]byte, []int) {
	return file_download_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadStatus) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DownloadStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

var File_download_proto protoreflect.FileDescriptor

const file_download_proto_rawDesc = "" +
	"\n" +
	"\x0edownload.proto\"*\n" +
	"\fDownloadTask\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\"m\n" +
	"\x0fDownloadSummary\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12 \n" +
	"\vchunkNumber\x18\x02 \x01(\x05R\vchunkNumber\x12\x1c\n" +
	"\tchunkSize\x18\x03 \x01(\x03R\tchunkSize\";\n" +
	"\tFileChunk\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"D\n" +
	"\x0eDownloadStatus\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x16\n" +
	"\x06status\x18\x02 \x01(\x05R\x06status2l\n" +
	"\x0fDownloadService\x12.\n" +
	"\vPreDownload\x12\r.DownloadTask\x1a\x10.DownloadSummary\x12)\n" +
	"\bDownload\x12\n" +
	".FileChunk\x1a\x0f.DownloadStatus(\x01B\x10Z\x0eproto/downloadb\x06proto3"

var (
	file_download_proto_rawDescOnce sync.Once
	file_download_proto_rawDescData []byte
)

func file_download_proto_rawDescGZIP() []byte {
	file_download_proto_rawDescOnce.Do(func() {
		file_download_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_download_proto_rawDesc), len(file_download_proto_rawDesc)))
	})
	return file_download_proto_rawDescData
}

var file_download_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_download_proto_goTypes = []any{
	(*DownloadTask)(nil),    // 0: DownloadTask
	(*DownloadSummary)(nil), // 1: DownloadSummary
	(*FileChunk)(nil),       // 2: FileChunk
	(*DownloadStatus)(nil),  // 3: DownloadStatus
}
var file_download_proto_depIdxs = []int32{
	0, // 0: DownloadService.PreDownload:input_type -> DownloadTask
	2, // 1: DownloadService.Download:input_type -> FileChunk
	1, // 2: DownloadService.PreDownload:output_type -> DownloadSummary
	3, // 3: DownloadService.Download:output_type -> DownloadStatus
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_download_proto_init() }
func file_download_proto_init() {
	if File_download_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_download_proto_rawDesc), len(file_download_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_download_proto_goTypes,
		DependencyIndexes: file_download_proto_depIdxs,
		MessageInfos:      file_download_proto_msgTypes,
	}.Build()
	File_download_proto = out.File
	file_download_proto_goTypes = nil
	file_download_proto_depIdxs = nil
}
